diff --git a/init/init.c b/init/init.c
index a33a265..8227534 100644
--- a/init/init.c
+++ b/init/init.c
@@ -817,6 +817,10 @@ static void import_kernel_nv(char *name, int for_emulator)
 #endif
     } else if (!strcmp(name,BOARD_CHARGING_CMDLINE_NAME)) {
         strlcpy(battchg_pause, value, sizeof(battchg_pause));
+    } else if (!strncmp(name, "cp_update", 9)) {
+        property_set(name, value);
+    } else if (!strncmp(name, "testmode", 8)) {
+        property_set(name, value);
     } else if (!strncmp(name, "androidboot.", 12) && name_len > 12) {
         const char *boot_prop_name = name + 12;
         char prop[PROP_NAME_MAX];
@@ -1108,6 +1112,8 @@ int main(int argc, char **argv)
     int signal_fd_init = 0;
     int keychord_fd_init = 0;
     bool is_charger = false;
+    bool is_testmode = false;
+    bool is_cpupdate = false;
 
     if (!strcmp(basename(argv[0]), "ueventd"))
         return ueventd_main(argc, argv);
@@ -1173,7 +1179,24 @@ int main(int argc, char **argv)
     restorecon("/dev/__properties__");
     restorecon_recursive("/sys");
 
-    is_charger = !strcmp(bootmode, "charger");
+    char mode_tmp[PROP_VALUE_MAX];
+
+    // is_cpupdate
+    memset(mode_tmp, 0, sizeof(mode_tmp));
+    property_get("cp_update", mode_tmp);
+    if (!strncmp(mode_tmp, "1", 1))
+        is_cpupdate = true;
+
+    // is_testmoe
+    memset(mode_tmp, 0, sizeof(mode_tmp));
+    property_get("testmode", mode_tmp);
+    if (!strncmp(mode_tmp, "1", 1))
+        is_testmode = true;
+
+    // is_charger
+    is_charger = ( !strcmp(bootmode, "charger") ) ||
+        ( !strcmp(bootmode, "usb_cable") ) ||
+        ( !strcmp(bootmode, "ac_charger") );
 
     INFO("property init\n");
     if (!is_charger)
@@ -1181,7 +1204,11 @@ int main(int argc, char **argv)
 
     INFO("reading config file\n");
 
-    if (!charging_mode_booting())
+    if (is_testmode) {
+       init_parse_config_file("/init.testmode.rc");
+    } else if (is_cpupdate) {
+       init_parse_config_file("/init.cp_update.rc");
+    } else if (!charging_mode_booting())
        init_parse_config_file("/init.rc");
     else
        init_parse_config_file("/lpm.rc");
